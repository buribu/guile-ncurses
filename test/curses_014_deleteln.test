;;;; -*- Mode: scheme; -*-
;;; curses_014_deleteln.test --- test suite for curses's line
;;;; deletion functions

;; Copyright 2009, 2010 Free Software Foundation, Inc.

;; This file is part of Guile-Ncurses.

;; Guile-Ncurses is free software: you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation, either version 3 of
;; the License, or (at your option) any later version.

;; Guile-Ncurses is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.

;; You should have received a copy of the GNU Lesser General Public
;; License along with Guile-Ncurses.  If not, see
;; <http://www.gnu.org/licenses/>.


(use-modules (test lib)
	     (test lib2)
	     (srfi srfi-1)
	     (ncurses curses))


(define test (curses-test-start))

(define win (initscr))
(define (mvinch y x)
  (inch win #:y y #:x x))

(with-test-prefix
 "deleteln"

 (pass-if "deleteln"
	  (begin
	    (clear win)
	    (addstr win "aaa" #:y 0 #:x 0)
	    (addstr win "bbb" #:y 1 #:x 0)
	    (addstr win "ccc" #:y 2 #:x 0)
	    (move win 1 0)
	    (deleteln win)
	    (refresh win)
	    (let ((x1 (mvinch 0 0))
		  (x2 (mvinch 2 0)))
	      (and
	       (xchar-equal? x1 (normal #\a))
	       (xchar-equal? x2 (normal #\sp))))))

 (pass-if "insdelln -1"
	  (begin
	    (clear win)
	    (addstr win "aaa" #:y 0 #:x 0)
	    (addstr win "bbb" #:y 1 #:x 0)
	    (addstr win "ccc" #:y 2 #:x 0)
	    (move win 1 0)
	    (insdelln win -1)
	    (refresh win)
	    (let ((x1 (mvinch 0 0))
		  (x2 (mvinch 2 0)))
	      (and
	       (xchar-equal? x1 (normal #\a))
	       (xchar-equal? x2 (normal #\sp))))))

 (pass-if "insertln"
	  (begin
	    (clear win)
	    (addstr win "aaa" #:y 0 #:x 0)
	    (addstr win "bbb" #:y 1 #:x 0)
	    (addstr win "ccc" #:y 2 #:x 0)
	    (move win 1 0)
	    (insertln win)
	    (refresh win)
	    (let ((x1 (mvinch 0 0))
		  (x2 (mvinch 2 0)))
	      (and
	       (xchar-equal? x1 (normal #\a))
	       (xchar-equal? x2 (normal #\b))))))

 (pass-if "insdelln +1"
	  (begin
	    (clear win)
	    (addstr win "aaa" #:y 0 #:x 0)
	    (addstr win "bbb" #:y 1 #:x 0)
	    (addstr win "ccc" #:y 2 #:x 0)
	    (move win 1 0)
	    (insdelln win 1)
	    (refresh win)
	    (let ((x1 (mvinch 0 0))
		  (x2 (mvinch 2 0)))
	      (and
	       (xchar-equal? x1 (normal #\a))
	       (xchar-equal? x2 (normal #\b)))))))
(endwin)

(curses-test-end test "curses_014_deleteln.out")
