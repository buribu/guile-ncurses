;;;; -*- Mode: scheme; -*-
;;;; curses_034_util.test --- test suite for curses's utility routines


;; Copyright 2009, 2010 Free Software Foundation, Inc.

;; This file is part of Guile-Ncurses.

;; Guile-Ncurses is free software: you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation, either version 3 of
;; the License, or (at your option) any later version.

;; Guile-Ncurses is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.

;; You should have received a copy of the GNU Lesser General Public
;; License along with Guile-Ncurses.  If not, see
;; <http://www.gnu.org/licenses/>.

(use-modules (test lib)
             (test lib2)
             (ncurses curses)
             (srfi srfi-1))

(define test (curses-test-start))

(define mainwin (initscr))

;; Try some of the obscure utilities
(with-test-prefix
 "util"

 (pass-if "delay-output"
          (begin
            (delay-output 1)
            'untested))

 (pass-if "curses-version"
          (string? (curses-version)))

 (pass-if "unctrl #\\bel"
          (string=? "^G" (unctrl #\bel)))

 (pass-if "unctrl x"
          (string=? "x" (unctrl #\x)))

 (pass-if "unctrl xchar #\\bel"
          (string=? "^G" (unctrl (normal #\bel))))

 (pass-if "unctrl xchar x"
          (string=? "x" (unctrl (normal #\x))))

 (pass-if "keyname #\\bel"
          (string=? "^G" (keyname #\bel)))

 (pass-if "keyname x"
          (string=? "x" (keyname #\x)))

 (pass-if "keyname home"
          (string=? "KEY_HOME" (keyname KEY_HOME))))

(with-test-prefix
 "getwin/putwin"

 (let ((win (newwin 5 5 5 5))
       (windata #f))

   (pass-if "putwin"
	    (if (string-prefix? "6.0"
				(cadr (string-split (curses-version) #\space)))
		'untested
		(begin
		  (addstr win "zzz" #:y 0 #:x 0)
		  (refresh win)
		  (set! windata (call-with-output-string
				 (lambda (port)
				   (putwin win port))))
		  (not (string-null? windata)))))

   (pass-if "getwin"
	    (if (string-prefix? "6.0"
				(cadr (string-split (curses-version) #\space)))
		'untested

		(begin
		  (clear mainwin)
		  (refresh mainwin)
		  (let ((win (false-if-exception (call-with-input-string windata getwin))))
		    (and win
			 (begin
			   (refresh win)
			   (string=? "zzz" (instr win #:y 0 #:x 0 #:n 3))))))))))

(endwin)

(curses-test-end test "curses_034_util.out")
