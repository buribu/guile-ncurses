;;;; -*- Mode: scheme; -*-
;;;; r030-termattrs.test --- test suite for curses's term attrs

(use-modules (test lib)
	     (test lib2)
	     ;; (gucu curses-wide)
	     (gucu curses)
	     (ice-9 format)
	     (srfi srfi-1))

(define test (curses-test-start))

(define win (initscr))

;; Should be able to get term attributes
(with-test-prefix 
 "termattrs"

 (pass-if "baudrate"
	  (begin
	    (clear win)
	    (let ((b (baudrate)))
	      (addstr win (format #f "Baudrate: ~a" b))
	      (refresh win)
	      ;; (sleep 1)
	      (eqv? b 38400)
	      *unspecified*)))

 ;; Not sure what the correct answer for
 ;; erasechar should be.  Gnu/Linux xterm gives
 ;; #\del.  Cygwin gives ERR.
 (pass-if "erasechar"
	  (begin
	    (clear win)
	    (move win 0 0)
	    (let ((c (erasechar)))
	      (addstr win (format #f "Erasechar: ~a" c))
	      (refresh win)
	      ;; (sleep 1)
	      (eqv? c #\del)
	    *unspecified*))
 
 ;; Not sure what the correct answer for killchar
 ;; should be.  Gnu/Linux xterm give #\nak. Cygwin
 ;; gives ERR
 (pass-if "killchar"
	  (begin
	    (clear win)
	    (move win 0 0)
	    (let ((c (killchar)))
	      (addstr win (format #f "Killchar: ~a" c))
	      (refresh win)
	      ;; (sleep 1)
	      (eqv? c #\nak))
	    *unspecified*))

 (pass-if "has-ic?"
	  (begin
	    (clear win)
	    (move win 0 0)
	    (let ((h (has-ic?)))
	      (addstr win (format #f "Has IC: ~a" h))
	      (refresh win)
	      ;; (sleep 1)
	      (eqv? h #t))))

 (pass-if "has-il?"
	  (begin
	    (clear win)
	    (move win 0 0)
	    (let ((h (has-il?)))
	      (addstr win (format #f "Has IL: ~a" h))
	      (refresh win)
	      ;; (sleep 1)
	      (eqv? h #t))))

 (pass-if "longname"
	  (begin
	    (clear win)
	    (move win 0 0)
	    (let ((c (longname)))
	      (addstr win c)
	      (refresh win)
	      ;; (sleep 1)
	      (not (not (string= c "xterm" 0 4 0 4))))
	    *unspecified*))


 (pass-if "termname"
	  (begin
	    (clear win)
	    (move win 0 0)
	    (let ((c (termname)))
	      (addstr win c)
	      (refresh win)
	      ;; (sleep 1)
	      (not (not (string= c "xterm" 0 4 0 4))))
	    *unspecified*))


 (pass-if "termattrs"
	  (begin
	    (clear win)
	    (let ((ta (termattrs))
		  (ta2 (logior 
			A_ALTCHARSET
			A_BLINK
			A_BOLD
					; A_DIM
			A_COLOR
			A_INVIS
					; A_PROTECT
			A_REVERSE
			A_STANDOUT
			A_UNDERLINE))) 
	      (move win 0 0)
	      (addstr win (format #f "      ~32,'0b~%" ta))
	      (addstr win (format #f "PRTCT ~32,'0b~%" A_PROTECT))
	      (addstr win (format #f "INVIS ~32,'0b~%" A_INVIS))
	      (addstr win (format #f "  ALT ~32,'0b~%" A_ALTCHARSET))
	      (addstr win (format #f " BOLD ~32,'0b~%" A_BOLD))
	      (addstr win (format #f "  DIM ~32,'0b~%" A_DIM))
	      (addstr win (format #f "BLINK ~32,'0b~%" A_BLINK))
	      (addstr win (format #f "RVRSE ~32,'0b~%" A_REVERSE))
	      (addstr win (format #f "UNDRL ~32,'0b~%" A_UNDERLINE))
	      (addstr win (format #f "STNDT ~32,'0b~%" A_STANDOUT))
	      (addstr win (format #f "COLOR ~32,'0b~%" A_COLOR))
	      (addstr win (format #f "      ~32,'0b~%" ta2))
	      (refresh win)
	      (sleep 1)
	      (eqv? ta ta2))
	    *unspecified*))

 )


(endwin)

(curses-test-end test "r030_termattrs.out")		  
