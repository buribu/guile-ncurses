;;;; -*- Mode: scheme; -*-
;;;; curses_006_addchstr.test --- test suite for curses's addchstr
;;;; functions

;; Copyright 2009, 2010 Free Software Foundation, Inc.

;; This file is part of Guile-Ncurses.

;; Guile-Ncurses is free software: you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation, either version 3 of
;; the License, or (at your option) any later version.

;; Guile-Ncurses is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.

;; You should have received a copy of the GNU Lesser General Public
;; License along with Guile-Ncurses.  If not, see
;; <http://www.gnu.org/licenses/>.

(use-modules (test lib)
             (test lib2)
             (srfi srfi-1)
             (ncurses curses))

(define test (curses-test-start))

(define stdscr (initscr))

(define hello (normal "hello"))
(define he (normal "he"))
(define hello-bold (bold "hello"))
(define he-bold (bold "he"))

(with-test-prefix
 "addchstr"

 (pass-if "addchstr"
          (begin
            (clear stdscr)
            (move stdscr 0 0)
            (addchstr stdscr hello)
            (refresh stdscr)
            (let ((w2 (inchstr stdscr #:y 0 #:x 0 #:n 10)))
              (lset= xchar-equal? hello (list-head w2 (length hello))))))

 (pass-if "addchstr #:n"
          (begin
            (clear stdscr)
            (move stdscr 0 0)
            (addchstr stdscr hello #:n 2)
            (refresh stdscr)
            (let ((w2 (inchstr stdscr #:y 0 #:x 0 #:n 10)))
              (lset= xchar-equal? he (list-head w2 (length he))))))

 (pass-if "addchstr #:y #:x"
          (begin
            (clear stdscr)
            (addchstr stdscr hello-bold #:y 1 #:x 0)
            (refresh stdscr)
            (let ((x2 (inchstr stdscr #:y 1 #:x 0 #:n 10)))
              (lset= xchar-equal?
                     hello-bold
                     (list-head x2 (length hello-bold))))))

 (pass-if "addchstr #:y #:x #:n"
          (begin
            (clear stdscr)
            (addchstr stdscr hello-bold #:y 1 #:x 0 #:n 2)
            (refresh stdscr)
            (let ((x2 (inchstr stdscr #:y 1 #:x 0 #:n 10)))
              (lset= xchar-equal?
                     he-bold
                     (list-head x2 (length he-bold)))))))

(endwin)

(curses-test-end test "curses_006_addchstr.out")
