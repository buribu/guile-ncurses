;;;; -*- Mode: scheme; -*-
;;;; curses_004_characters.test --- test suite for curses's character
;;;; constants

;; Copyright 2009, 2010 Free Software Foundation, Inc.

;; This file is part of Guile-Ncurses.

;; Guile-Ncurses is free software: you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation, either version 3 of
;; the License, or (at your option) any later version.

;; Guile-Ncurses is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.

;; You should have received a copy of the GNU Lesser General Public
;; License along with Guile-Ncurses.  If not, see
;; <http://www.gnu.org/licenses/>.

(use-modules (test lib)
             (test lib2)
             (srfi srfi-1)
             (ncurses curses))

(define test (curses-test-start))

(define win (initscr))

(with-test-prefix
 "ASCII"
 (pass-if "a"
          (begin
            (addch win (normal #\a) #:x 0 #:y 0)
            (refresh win)
            (let ((x2 (inch win #:y 0 #:x 0)))
              (xchar-equal? x2 (normal #\a))))))

(define (acs-test-pair pair)
  (acs-test (car pair) (cdr pair)))

;; If the term can print the char, the character should be part of the
;; ALTCHARSET.  If it can't it'll show up as a normal character
(define (acs-test xname x)
  (pass-if xname
           (begin
             (clear win)
             (move win 0 0)
             (addch win (normal x))
             (refresh win)
             (usleep 10000)
             (move win 0 0)
             (let ((x2 (inch win)))
               (xchar-equal? (normal x) x2)))))

(with-test-prefix
 "ACS"
 (map acs-test-pair
      `(("acs-ulcorner" . ,(acs-ulcorner))
        ("acs-llcorner" . ,(acs-llcorner))
        ("acs-urcorner" . ,(acs-urcorner))
        ("acs-lrcorner" . ,(acs-lrcorner))
        ("acs-rtee" . ,(acs-rtee))
        ("acs-ltee" . ,(acs-ltee))
        ("acs-btee" . ,(acs-btee))
        ("acs-ttee" . ,(acs-ttee))
        ("acs-hline" . ,(acs-hline))
        ("acs-vline" . ,(acs-vline))
        ("acs-plus" . ,(acs-plus))
        ("acs-s1" . ,(acs-s1))
        ("acs-s9" . ,(acs-s9))
        ("acs-diamond" . ,(acs-diamond))
        ("acs-ckboard" . ,(acs-ckboard))
        ("acs-degree" . ,(acs-degree))
        ("acs-plminus" . ,(acs-plminus))
        ("acs-larrow" . ,(acs-larrow))
        ("acs-rarrow" . ,(acs-rarrow))
        ("acs-uarrow" . ,(acs-uarrow))
        ("acs-darrow" . ,(acs-darrow))
        ("acs-board" . ,(acs-board))
        ("acs-lantern" . ,(acs-lantern))
        ("acs-block" . ,(acs-block))
        )))

(endwin)

(curses-test-end test "curses_004_characters.out")
