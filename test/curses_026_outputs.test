;;;; -*- Mode: scheme; -*-
;;;; curses_026_outopts.test --- test suite for curses's output options


;; Copyright 2009, 2010 Free Software Foundation, Inc.

;; This file is part of Guile-Ncurses.

;; Guile-Ncurses is free software: you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation, either version 3 of
;; the License, or (at your option) any later version.

;; Guile-Ncurses is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.

;; You should have received a copy of the GNU Lesser General Public
;; License along with Guile-Ncurses.  If not, see
;; <http://www.gnu.org/licenses/>.

(use-modules (test lib)
             (test lib2)
             (ncurses curses)
             (srfi srfi-1))

(define test (curses-test-start))

(define win (initscr))

;; Should be able to move the cursor
(with-test-prefix
 "outopts"

 (pass-if "clearok! #f"
          (begin
            (clearok! win #f)
            #t))

 (pass-if "setscrreg! #t"
          (begin
            (clear win)
            (setscrreg! win 0 3)
            (scrollok! win #t)
            (move win 0 0)
            (addstr win "aaa\n")
            (addstr win "bbb\n")
            (addstr win "ccc\n")
            (addstr win "ddd\n")
            (addstr win "eee\n")
            (refresh win)
            (let ((x1 (instr win #:y 0 #:x 0 #:n 3))
                  (x2 (instr win #:y 1 #:x 0 #:n 3))
                  (x3 (instr win #:y 2 #:x 0 #:n 3)))
              (and
               (string=? x1 "ccc")
               (string=? x2 "ddd")
               (string=? x3 "eee")))))

 (pass-if "setscrreg! #f"
          (begin
            (clear win)
            (setscrreg! win 0 3)
            (scrollok! win #f)
            (move win 0 0)
            (addstr win "aaa\n")
            (addstr win "bbb\n")
            (addstr win "ccc\n")
            (addstr win "ddd\n")
            (addstr win "eee\n")
            (refresh win)
            (let ((x1 (instr win #:y 0 #:x 0 #:n 3))
                  (x2 (instr win #:y 1 #:x 0 #:n 3))
                  (x3 (instr win #:y 2 #:x 0 #:n 3)))
              (and
               (string=? x1 "aaa")
               (string=? x2 "bbb")
               (string=? x3 "ccc"))))))

(setscrreg! win 0 (- (lines) 1))

(endwin)

(curses-test-end test "curses_026_outputs.out")
