;;;; -*- Mode: scheme; -*-

;;;; p001_panel.test ---

;; Copyright 2009, 2010 Free Software Foundation, Inc.

;; This file is part of Guile-Ncurses.

;; Guile-Ncurses is free software: you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation, either version 3 of
;; the License, or (at your option) any later version.

;; Guile-Ncurses is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.

;; You should have received a copy of the GNU Lesser General Public
;; License along with Guile-Ncurses.  If not, see
;; <http://www.gnu.org/licenses/>.

(use-modules (test lib)
             (test lib2)
             (srfi srfi-1)
             (ncurses curses)
             (ncurses panel))

(define test (curses-test-start))

(set! *sleep* #f)
(define mainwin (initscr))

;; Should be able to make a panel
(with-test-prefix
 "panel"

 (pass-if "new-panel"
          (let* ((win1 (newwin 5 10 5 5))
                 (win2 (newwin 5 10 7 7))
                 (panel1 (new-panel win1))
                 (panel2 (new-panel win2)))
            (box win1
                 (normal (acs-vline))
                 (normal (acs-hline)))
            (addstr win1 "box 1"  #:y 1 #:x 1)
            (box win2
                 (normal (acs-vline))
                 (normal (acs-hline)))
            (addstr win2 "box 2" #:y 1 #:x 1)
            (update-panels)
            (doupdate)
            (maybe-sleep 1)

            (addstr win1 "bottom" #:y 1 #:x 1)
            (addstr win2 "box 2 " #:y 1 #:x 1)
            (bottom-panel panel1)
            (update-panels)
            (doupdate)
            (maybe-sleep 1)

            (addstr win1 "top   " #:y 1 #:x 1)
            (addstr win2 "box 2 " #:y 1 #:x 1)
            (top-panel panel1)
            (update-panels)
            (doupdate)
            (maybe-sleep 1)

            (addstr win1 "hide   " #:y 1 #:x 1)
            (addstr win2 "box 2  " #:y 1 #:x 1)
            (hide-panel panel1)
            (update-panels)
            (doupdate)
            (maybe-sleep 1)

            (addstr win1 "show   " #:y 1 #:x 1)
            (addstr win2 "box 2  " #:y 1 #:x 1)
            (show-panel panel1)
            (update-panels)
            (doupdate)
            (maybe-sleep 1)

            (addstr win1 "move   " #:y 1 #:x 1)
            (addstr win2 "box 2  " #:y 1 #:x 1)
            (move-panel panel1 2 2)
            (update-panels)
            (doupdate)
            (maybe-sleep 1)

            (addstr (panel-window panel1) "pwin1  " #:y 1 #:x 1)
            (addstr (panel-window panel2) "pwin2  " #:y 1 #:x 1)
            (move-panel panel1 2 2)
            (update-panels)
            (doupdate)
            (maybe-sleep 1)

            (addstr win1 "delete " #:y 1 #:x 1)
            (addstr win2 "box 2  " #:y 1 #:x 1)
            (del-panel panel1)
            (update-panels)
            (doupdate)
            (maybe-sleep 1)

            *unspecified*)))

(endwin)

(curses-test-end test "p001_panel.out")
