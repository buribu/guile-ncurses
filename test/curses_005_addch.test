;;;; -*- Mode: scheme; -*-
;;;; curses_005_addch.test --- test suite for curses's addch functions

;; Copyright 2009, 2010 Free Software Foundation, Inc.

;; This file is part of Guile-Ncurses.

;; Guile-Ncurses is free software: you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation, either version 3 of
;; the License, or (at your option) any later version.

;; Guile-Ncurses is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.

;; You should have received a copy of the GNU Lesser General Public
;; License along with Guile-Ncurses.  If not, see
;; <http://www.gnu.org/licenses/>.

(use-modules (test lib)
	     (test lib2)
	     (srfi srfi-1)
	     (ncurses curses))

(define test (curses-test-start))

(define win (initscr))
(define x_normal (normal #\x))
(define x_bold (bold #\x))

(with-test-prefix
 "addch"

 (pass-if "addch"
	  (begin
	    (clear win)
	    (move win 0 0)
	    (addch win x_normal)
	    (refresh win)
	    (move win 0 0)
	    (let ((x2 (inch win)))
	      (xchar-equal? x_normal x2))))

 (pass-if "addch #:y #:x"
	  (begin
	    (clear win)
	    (addch win x_bold #:y 1 #:x 0)
	    (refresh win)
	    (let ((x2 (inch win #:y 1 #:x 0)))
	      (xchar-equal? x_bold x2))))

 (pass-if "echochar"
	  (begin
	    (clear win)
	    (move win 2 0)
	    (echochar win x_normal)
	    (let ((x2 (inch win #:y 2 #:x 0)))
	      (xchar-equal? x_normal x2)))))

(endwin)

(curses-test-end test "curses_005_addch.out")
